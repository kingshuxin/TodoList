{"version":3,"sources":["store/reducer.js","store/index.js","store/actionType.js","store/actionCreate.js","component/TodoItem.js","component/TodoList.js","index.js"],"names":["initState","list","store","createStore","state","arguments","length","undefined","action","newState","JSON","parse","stringify","type","val","push","done","alert","index","splice","window","__REDUX_DEVTOOLS_EXTENSION__","getAddList","value","getChangeList","getDeleteList","TodoItem","handleChange","Actions","dispatch","handleDelete","_this2","this","props","react_default","a","createElement","Fragment","className","map","ele","key","onClick","React","Component","TodoList","task","createRef","getState","handleAdd","_this","current","handleStoreChange","setState","subscribe","ref","component_TodoItem","element","component_TodoList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85c27a5f.chunk.js","sourcesContent":["import * as types from './actionType'\r\n\r\nconst initState = {\r\n    list: []\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case types.ADD_TO_LIST:\r\n            if(action.val){\r\n                newState.list.push({ val: action.val, done: action.done });\r\n            }else{\r\n                alert('你今天的目标是啥？？？')\r\n            }\r\n            \r\n            return newState;\r\n        case types.CHANGE_LIST:\r\n            newState.list[action.index].done = !newState.list[action.index].done\r\n            return newState;\r\n        case types.DELETE_LIST:\r\n            newState.list.splice([action.index],1)\r\n            return newState;\r\n    }\r\n    return state;\r\n}","import { createStore } from 'redux'\r\nimport reducer from './reducer'\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","export const CHANGE_INPUT_VALUE = 'CHANGE_INPUT_VALUE'\r\nexport const ADD_TO_LIST = 'ADD_TO_LIST'\r\nexport const CHANGE_LIST = 'CHANGE_LIST'\r\nexport const DELETE_LIST = 'DELETE_LIST'","import * as Types from './actionType'\r\n\r\nexport const getChangeAction = (value) =>{\r\n    return {\r\n        type: Types.CHANGE_INPUT_VALUE,\r\n        value\r\n    }\r\n}\r\n\r\nexport const getAddList = (value) =>{\r\n    return {\r\n        type: Types.ADD_TO_LIST,\r\n        val: value.val,\r\n        done: value.done\r\n    }\r\n}\r\n\r\nexport const getChangeList = (index) =>{\r\n    return {\r\n        type: Types.CHANGE_LIST,\r\n        index\r\n    }\r\n}\r\n\r\nexport const getDeleteList = (index) =>{\r\n    return {\r\n        type: Types.DELETE_LIST,\r\n        index\r\n    }\r\n}\r\n","import React from 'react'\r\nimport store from '../store'\r\nimport * as Actions from '../store/actionCreate'\r\n\r\nclass TodoItem extends React.Component {\r\n    render() {\r\n        const { list} = this.props;\r\n        return (\r\n            <>\r\n                <div>\r\n                    <span className='willDo'>代办事项</span>\r\n                    <ol>\r\n                        {\r\n                            list.map((ele, index) => {\r\n                                if (!ele.done) {\r\n                                    return (\r\n                                    <li key={index}>{ele.val}\r\n                                        <button onClick={() => { this.handleChange(index) }}>完成</button>\r\n                                        <button onClick={() => { this.handleDelete(index) }}>删除</button>\r\n                                    </li>)}\r\n                            })\r\n                        }\r\n                    </ol>\r\n                </div>\r\n                <div>\r\n                    <span className='done'>已完成</span>\r\n                    <ol>\r\n                        {\r\n                            list.map((ele, index) => {\r\n                                if (ele.done) {\r\n                                    return (\r\n                                        <li key={index}>{ele.val}\r\n                                            <button onClick={() => { this.handleChange(index) }}>重做</button>\r\n                                            <button onClick={() => { this.handleDelete(index) }}>删除</button>\r\n                                        </li>)\r\n                                }\r\n                            }\r\n                            )\r\n                        }\r\n                    </ol>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n    handleChange = (index) => {\r\n        const action = Actions.getChangeList(index)\r\n        store.dispatch(action)\r\n    }\r\n    handleDelete = (index) => {\r\n        const action = Actions.getDeleteList(index)\r\n        store.dispatch(action)\r\n    }\r\n}\r\nexport default TodoItem;","import React from 'react'\r\nimport store from '../store'\r\nimport * as Actions from '../store/actionCreate'\r\nimport TodoItem from './TodoItem'\r\nclass TodoList extends React.Component {\r\n    task = React.createRef()\r\n    state = store.getState();\r\n\r\n    componentDidMount (){\r\n        store.subscribe(this.handleStoreChange)\r\n    }\r\n    render() {\r\n        \r\n        // let done = 0;\r\n//  this.state.list.forEach(ele => {\r\n//         if(ele.done){\r\n//             willDo++\r\n//         }else{\r\n//             done++\r\n//         }\r\n//     });\r\n        return (\r\n            <>\r\n                <div>\r\n                    <input type=\"text\"  ref={this.task}/>\r\n                    <button onClick={this.handleAdd}>添加</button>\r\n                </div>\r\n                \r\n                <TodoItem list = {this.state.list}></TodoItem>\r\n                \r\n            </>\r\n        )\r\n    }\r\n    // handleChange = (e) =>{\r\n    //     const action = Actions.getChangeAction(e.target.value)//{val:e.target.value, done:false}\r\n    //     store.dispatch(action)\r\n    // }\r\n    handleAdd = () =>{\r\n        const action =Actions.getAddList({val:this.task.current.value, done: false})\r\n        this.task.current.value =''\r\n        store.dispatch(action)\r\n    }\r\n    handleChange = (index) =>{\r\n        const action = Actions.getChangeList(index)\r\n        store.dispatch(action)\r\n    }\r\n    handleStoreChange = ()=> {\r\n        this.setState(store.getState())  \r\n    }\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TodoList from './component/TodoList'\n\nlet element = (\n    <TodoList>\n\n    </TodoList>\n)\n\nReactDOM.render(element, document.getElementById('root'));\n"],"sourceRoot":""}